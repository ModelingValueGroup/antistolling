package serviceLogic;

/*Generated by MPS */

import org.modelingvalue.cds.runtime.CDSObject;
import org.modelingvalue.dclare.Observed;
import org.modelingvalue.dclare.Observer;
import java.util.function.Function;
import java.util.function.Predicate;
import org.modelingvalue.dclare.MutableClass;
import org.modelingvalue.cds.runtime.CDSClass;
import cdm.lang.java.BaseDispatcher__cdm_lang;
import org.modelingvalue.cds.runtime.CDSUniverse;

public class Medicijn_Concept extends CDSObject {

  public static final Observed<Medicijn_Concept, Medicijn_Concept> GENERIEK_OBSERVED = Observed.<Medicijn_Concept,Medicijn_Concept>of("=generiek", null, null);
  public static final Observed<Medicijn_Concept, MedicijnGroep_Concept> GROEP_OBSERVED = Observed.<Medicijn_Concept,MedicijnGroep_Concept>of("=groep", null, null);

  public static final Observed<Medicijn_Concept, Medicijn_Concept> MEDICIJNGROEP_C0_COLUMN = Observed.<Medicijn_Concept,Medicijn_Concept>of("MedicijnGroep_c0", null);
  public static final Observed<Medicijn_Concept, Boolean> MEDICIJNGROEP_R0_ROW = Observed.<Medicijn_Concept,Boolean>of("MedicijnGroep_r0", null);

  public static final Observer<Medicijn_Concept> MEDICIJNGROEP_C0_OBSERVER = Observer.of("MedicijnGroep_c0", Medicijn_Concept.MEDICIJNGROEP_C0_COLUMN, new Function<Medicijn_Concept, Medicijn_Concept>() {
    public Medicijn_Concept apply(Medicijn_Concept it) {
      return it.MedicijnGroep_c0();
    }
  });
  public static final Observer<Medicijn_Concept> MEDICIJNGROEP_R0_OBSERVER = Observer.of("MedicijnGroep_r0", Medicijn_Concept.MEDICIJNGROEP_R0_ROW, new Function<Medicijn_Concept, Boolean>() {
    public Boolean apply(Medicijn_Concept it) {
      return true && it.MedicijnGroep_c0_r0() == Boolean.TRUE;
    }
  });
  public static final Observer<Medicijn_Concept> MEDICIJNGROEP_C1_R0_OBSERVER = Observer.of("MedicijnGroep_c1_r0", Medicijn_Concept.GROEP_OBSERVED, new Predicate<Medicijn_Concept>() {
    @Override
    public boolean test(Medicijn_Concept a) {
      return Medicijn_Concept.MEDICIJNGROEP_R0_ROW.get(a) == Boolean.TRUE;
    }
  }, new Function<Medicijn_Concept, MedicijnGroep_Concept>() {
    public MedicijnGroep_Concept apply(Medicijn_Concept it) {
      return it.MedicijnGroep_c1_r0();
    }
  });

  private static final MutableClass D_CLASS = CDSClass.of(Medicijn_Concept.class);

  public Medicijn_Concept(Object id) {
    super(id);
  }

  @Override
  public MutableClass dClass() {
    return D_CLASS;
  }

  public Medicijn_Concept MedicijnGroep_c0() {
    return Medicijn_Concept.GENERIEK_OBSERVED.get(this);
  }
  public MedicijnGroep_Concept MedicijnGroep_c1() {
    return Medicijn_Concept.GROEP_OBSERVED.get(this);
  }
  public Boolean MedicijnGroep_c0_r0() {
    return ((Boolean) (BaseDispatcher__cdm_lang.INSTANCE.dispatch(Medicijn_Concept.MEDICIJNGROEP_C0_COLUMN.get(this), "ongelijk", (Object) null)));
  }
  public MedicijnGroep_Concept MedicijnGroep_c1_r0() {
    return Medicijn_Concept.GROEP_OBSERVED.get(Medicijn_Concept.GENERIEK_OBSERVED.get(this));
  }

  public static class ConceptUniverse extends Medicijn_Concept implements CDSUniverse {
    private static final MutableClass D_CLASS = CDSClass.of(ConceptUniverse.class);

    public ConceptUniverse(Object id) {
      super(id);
    }

    @Override
    public MutableClass dClass() {
      return ConceptUniverse.D_CLASS;
    }
  }
}
